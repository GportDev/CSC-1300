Gabriel Porteiro

1. The & symbol is the dereferencing operator. It is also called the indirection operator.
2. The * symbol means “address of” and is called the address operator.
3. The name of an array, without any brackets, acts as a(n) pointer to the starting address of the array.
4. A pointer variable can hold the memory address of a variable.

Given the following information, fill in the blanks of questions 5 through 8 with either “an address” or “3.75”.
    float * ptr;
    float pay = 3.75;
    ptr = &pay;

5. The statement cout << ptr; will print the memory address.
6. The statement cout << *ptr; will print 3.75.
7. The statement cout << &pay; will print the memory address.
8. The statement cout << pay; will print 3.75.
9. If I created another float variable like this
    float another_pay = 4.88;

Can I change the ptr variable to point to another_pay instead of pay? If so, how?
-Yes, just use `ptr = &another_pay`

10. If I created an int variable like this
    int intPay = 4;

Can I change the ptr variable to point to intPay instead of pay? If so, how?
-No, because ptr just can hold the memory address for float variables